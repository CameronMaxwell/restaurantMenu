/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

/**
 *
 * @author student
 */
public class Restaurant__GUI extends javax.swing.JFrame {

    public double price;
    public double tax;
    public double total;
    public double change;

    /**
     * Creates new form Restaurant__GUI
     */
    public Restaurant__GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        BillingSoftware = new javax.swing.JLabel();
        Menu = new javax.swing.JLabel();
        Main = new javax.swing.JLabel();
        Sides = new javax.swing.JLabel();
        Drinks = new javax.swing.JLabel();
        Hamburger = new javax.swing.JLabel();
        BaconCheeseburger = new javax.swing.JLabel();
        Fries = new javax.swing.JLabel();
        OnionRings = new javax.swing.JLabel();
        Water = new javax.swing.JLabel();
        Pop = new javax.swing.JLabel();
        HamburgerCheckBox = new javax.swing.JRadioButton();
        BcBurgerCheckBox = new javax.swing.JRadioButton();
        MAIN = new javax.swing.JLabel();
        SIDES = new javax.swing.JLabel();
        FriesCheckBox = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        OnionRingsCheckBox = new javax.swing.JRadioButton();
        DRINKS = new javax.swing.JLabel();
        WaterCheckBox = new javax.swing.JRadioButton();
        PopCheckBox = new javax.swing.JRadioButton();
        HamburgerInput = new javax.swing.JTextField();
        BcBurgerInput = new javax.swing.JTextField();
        ORInput = new javax.swing.JTextField();
        FriesInput = new javax.swing.JTextField();
        WaterInput = new javax.swing.JTextField();
        PopInput = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        Action = new javax.swing.JButton();
        TenderedAmountLabel = new javax.swing.JLabel();
        TenderedAmount = new javax.swing.JTextField();
        HamburgerOutput = new javax.swing.JLabel();
        BaconCheeseBurgerOutput = new javax.swing.JLabel();
        FriesOutput = new javax.swing.JLabel();
        OnionRingsOutput = new javax.swing.JLabel();
        WaterOutput = new javax.swing.JLabel();
        PopOutput = new javax.swing.JLabel();
        SubTotalOutput = new javax.swing.JLabel();
        TaxOutput = new javax.swing.JLabel();
        TotalCostOutput = new javax.swing.JLabel();
        ChangeLabel = new javax.swing.JLabel();
        CalculateChange = new javax.swing.JToggleButton();
        BURGERPALACE = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DERGER BERGER");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BillingSoftware.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BillingSoftware.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BillingSoftware.setText("Billing Software");

        Menu.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        Menu.setText("MENU:");

        Main.setText("Main:");

        Sides.setText("Sides:");

        Drinks.setText("Drinks:");

        Hamburger.setText("Hamburger $8.49");

        BaconCheeseburger.setText("Bacon Cheeseburger $9.49");

        Fries.setText("Fries $3.49");

        OnionRings.setText("Onion Rings $3.99");

        Water.setText("Water $1.49");

        Pop.setText("Pop $1.89");

        HamburgerCheckBox.setText("Hamburger");
        HamburgerCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HamburgerCheckBoxActionPerformed(evt);
            }
        });

        BcBurgerCheckBox.setText("Bacon Cheeseburger");
        BcBurgerCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BcBurgerCheckBoxActionPerformed(evt);
            }
        });

        MAIN.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        MAIN.setText("MAIN:");

        SIDES.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SIDES.setText("SIDES:");

        FriesCheckBox.setText("Fries");
        FriesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FriesCheckBoxActionPerformed(evt);
            }
        });

        OnionRingsCheckBox.setText("Onion Rings");
        OnionRingsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OnionRingsCheckBoxActionPerformed(evt);
            }
        });

        DRINKS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        DRINKS.setText("DRINKS:");

        WaterCheckBox.setText("Water");
        WaterCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WaterCheckBoxActionPerformed(evt);
            }
        });

        PopCheckBox.setText("Pop");
        PopCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PopCheckBoxActionPerformed(evt);
            }
        });

        Action.setText("ORDER");
        Action.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActionActionPerformed(evt);
            }
        });

        TenderedAmountLabel.setText("Tendered Amount:");

        TenderedAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TenderedAmountActionPerformed(evt);
            }
        });

        ChangeLabel.setText("Change");

        CalculateChange.setText("Calculate Change");
        CalculateChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateChangeActionPerformed(evt);
            }
        });

        BURGERPALACE.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        BURGERPALACE.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BURGERPALACE.setText("BURGER PALACE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(BillingSoftware, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Menu)
                            .addComponent(MAIN))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Main)
                            .addComponent(Sides)
                            .addComponent(Drinks))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Hamburger)
                            .addComponent(Fries)
                            .addComponent(Water))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Pop)
                            .addComponent(OnionRings)
                            .addComponent(BaconCheeseburger)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SIDES, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(HamburgerCheckBox)
                                    .addComponent(FriesCheckBox)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DRINKS, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(WaterCheckBox)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(HamburgerInput, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                    .addComponent(FriesInput)
                                    .addComponent(WaterInput))
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(BcBurgerCheckBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(BcBurgerInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(OnionRingsCheckBox)
                                            .addComponent(PopCheckBox))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(PopInput, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                            .addComponent(ORInput)))))
                            .addComponent(Action, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(TenderedAmountLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TenderedAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CalculateChange))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(TaxOutput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(SubTotalOutput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(HamburgerOutput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BaconCheeseBurgerOutput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(FriesOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
                            .addComponent(OnionRingsOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PopOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(WaterOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BURGERPALACE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ChangeLabel)
                                    .addComponent(TotalCostOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BURGERPALACE, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BillingSoftware)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Main)
                    .addComponent(Hamburger)
                    .addComponent(BaconCheeseburger))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Sides)
                    .addComponent(Fries)
                    .addComponent(OnionRings))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Drinks)
                    .addComponent(Water)
                    .addComponent(Pop))
                .addGap(17, 17, 17)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HamburgerCheckBox)
                    .addComponent(BcBurgerCheckBox)
                    .addComponent(MAIN)
                    .addComponent(HamburgerInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BcBurgerInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SIDES)
                    .addComponent(FriesCheckBox)
                    .addComponent(OnionRingsCheckBox)
                    .addComponent(ORInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FriesInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DRINKS)
                    .addComponent(WaterCheckBox)
                    .addComponent(PopCheckBox)
                    .addComponent(WaterInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PopInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(Action)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(HamburgerOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FriesOutput, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(WaterOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BaconCheeseBurgerOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OnionRingsOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PopOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(SubTotalOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TaxOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TotalCostOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TenderedAmountLabel)
                    .addComponent(TenderedAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CalculateChange))
                .addGap(18, 18, 18)
                .addComponent(ChangeLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HamburgerCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HamburgerCheckBoxActionPerformed
        // TODO add your handling code here:
        // When selected, the customer wants some hamburgers
    }//GEN-LAST:event_HamburgerCheckBoxActionPerformed

    private void FriesCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FriesCheckBoxActionPerformed
        // TODO add your handling code here:
        // When selected, the customer wants fries
    }//GEN-LAST:event_FriesCheckBoxActionPerformed

    private void OnionRingsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OnionRingsCheckBoxActionPerformed
        // TODO add your handling code here:
        // When selected, the customer wants some onion rings
    }//GEN-LAST:event_OnionRingsCheckBoxActionPerformed

    private void WaterCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WaterCheckBoxActionPerformed
        // TODO add your handling code here:
        // When selected, the customer wants some water
    }//GEN-LAST:event_WaterCheckBoxActionPerformed

    private void PopCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PopCheckBoxActionPerformed
        // TODO add your handling code here:  
        // When selected, the customer wants some pop
    }//GEN-LAST:event_PopCheckBoxActionPerformed

    private void TenderedAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TenderedAmountActionPerformed
        // TODO add your handling code here:
        // Customer enters the amount of money tendered into this text field
    }//GEN-LAST:event_TenderedAmountActionPerformed

    private void BcBurgerCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BcBurgerCheckBoxActionPerformed
        // TODO add your handling code here:
        // When selected, the customer wants some bacon cheeseburgers
    }//GEN-LAST:event_BcBurgerCheckBoxActionPerformed

    private void ActionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActionActionPerformed
        // TODO add your handling code here:
        // Calculates total cost with bacon cheeseburger included and adds it to the sub-total
        if (BcBurgerCheckBox.isSelected()) {
            int BcBurgeramount = Integer.parseInt(BcBurgerInput.getText());
            price += (9.49 * BcBurgeramount);
        }

        //Calculates total price with Hamburger included and adds it to the sub-total
        if (HamburgerCheckBox.isSelected()) {
            int Hamburgeramount = Integer.parseInt(HamburgerInput.getText());
            price += (8.49 * Hamburgeramount);
        }

        //Calculates total price with fries included and adds it to the sub-total
        if (FriesCheckBox.isSelected()) {
            int Friesamount = Integer.parseInt(FriesInput.getText());
            price += (3.49 * Friesamount);
        }
        //Calculates total price with onion rings included and adds it to the sub-total
        if (OnionRingsCheckBox.isSelected()) {
            int ORamount = Integer.parseInt(ORInput.getText());
            price += (3.99 * ORamount);
        }
        //Calculates total price with water included and adds it to the sub-total
        if (WaterCheckBox.isSelected()) {
            int Wateramount = Integer.parseInt(WaterInput.getText());
            price += (1.49 * Wateramount);
        }
        //Calculates total price with Pop included and adds it to the sub-total
        if (PopCheckBox.isSelected()) {
            int Popamount = Integer.parseInt(PopInput.getText());
            price += (1.89 * Popamount);
        }

        // Display amount and cost of the ordered Hamburgers 
        if (HamburgerCheckBox.isSelected()) {
            int Hamburgeramount = Integer.parseInt(HamburgerInput.getText());
            String outputLine = ("" + Hamburgeramount + " Hamburgers");
            HamburgerOutput.setText(outputLine);
        }
        // Display amount and cost of the ordered Bacon Cheeseburgers
        if (BcBurgerCheckBox.isSelected()) {
            int BcBurgeramount = Integer.parseInt(BcBurgerInput.getText());
            String outputLine = ("" + BcBurgeramount + " Bacon Cheeseburgers");
            BaconCheeseBurgerOutput.setText(outputLine);
        }
        // Display amount and cost of the ordered fries
        if (FriesCheckBox.isSelected()) {
            int Friesamount = Integer.parseInt(FriesInput.getText());
            String outputLine = ("" + Friesamount + " Fries");
            FriesOutput.setText(outputLine);
        }
        // Display amount and cost of the ordered onion rings
        if (OnionRingsCheckBox.isSelected()) {
            int ORamount = Integer.parseInt(ORInput.getText());
            String outputLine = ("" + ORamount + " Onion Rings");
            OnionRingsOutput.setText(outputLine);
        }
        // Display amount and cost of the ordered fries
        if (WaterCheckBox.isSelected()) {
            int Wateramount = Integer.parseInt(WaterInput.getText());
            String outputLine = ("" + Wateramount + " Water");
            WaterOutput.setText(outputLine);
        }
        // Display amount and cost of the ordered pop 
        if (PopCheckBox.isSelected()) {
            int Popamount = Integer.parseInt(PopInput.getText());
            String outputLine = ("" + Popamount + " Pop");
            PopOutput.setText(outputLine);
        }

            // Displays Subtotal cost before tax
            String outputLine = String.format("%.2f", price);
            String OutputLine = ("SUB-TOTAL: $" + outputLine);
            SubTotalOutput.setText(OutputLine);

            // Displays Tax
            outputLine = String.format("%.2f", price * 0.13);
            outputLine = ("TAX: $" + outputLine);
            TaxOutput.setText(outputLine);

            // Displays Total Cost after tax
            outputLine = String.format("%.2f", price * 1.13);
            outputLine = ("TOTAL: $" + outputLine);
            TotalCostOutput.setText(outputLine);


    }//GEN-LAST:event_ActionActionPerformed

    private void CalculateChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CalculateChangeActionPerformed
        // TODO add your handling code here:
        // Calculates change after getting the tendered cash from customer
        Float changeFloat = Float.parseFloat(TenderedAmount.getText());
        change = changeFloat - (price * 1.13);
        String Changeoutput = String.format("%.2f", change);
        String ChangeLabelstring = ("Change: $" + Changeoutput);
        ChangeLabel.setText(ChangeLabelstring);

    }//GEN-LAST:event_CalculateChangeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Restaurant__GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Restaurant__GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Restaurant__GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Restaurant__GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Restaurant__GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Action;
    private javax.swing.JLabel BURGERPALACE;
    private javax.swing.JLabel BaconCheeseBurgerOutput;
    private javax.swing.JLabel BaconCheeseburger;
    private javax.swing.JRadioButton BcBurgerCheckBox;
    private javax.swing.JTextField BcBurgerInput;
    private javax.swing.JLabel BillingSoftware;
    private javax.swing.JToggleButton CalculateChange;
    private javax.swing.JLabel ChangeLabel;
    private javax.swing.JLabel DRINKS;
    private javax.swing.JLabel Drinks;
    private javax.swing.JLabel Fries;
    private javax.swing.JRadioButton FriesCheckBox;
    private javax.swing.JTextField FriesInput;
    private javax.swing.JLabel FriesOutput;
    private javax.swing.JLabel Hamburger;
    private javax.swing.JRadioButton HamburgerCheckBox;
    private javax.swing.JTextField HamburgerInput;
    private javax.swing.JLabel HamburgerOutput;
    private javax.swing.JLabel MAIN;
    private javax.swing.JLabel Main;
    private javax.swing.JLabel Menu;
    private javax.swing.JTextField ORInput;
    private javax.swing.JLabel OnionRings;
    private javax.swing.JRadioButton OnionRingsCheckBox;
    private javax.swing.JLabel OnionRingsOutput;
    private javax.swing.JLabel Pop;
    private javax.swing.JRadioButton PopCheckBox;
    private javax.swing.JTextField PopInput;
    private javax.swing.JLabel PopOutput;
    private javax.swing.JLabel SIDES;
    private javax.swing.JLabel Sides;
    private javax.swing.JLabel SubTotalOutput;
    private javax.swing.JLabel TaxOutput;
    private javax.swing.JTextField TenderedAmount;
    private javax.swing.JLabel TenderedAmountLabel;
    private javax.swing.JLabel TotalCostOutput;
    private javax.swing.JLabel Water;
    private javax.swing.JRadioButton WaterCheckBox;
    private javax.swing.JTextField WaterInput;
    private javax.swing.JLabel WaterOutput;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
